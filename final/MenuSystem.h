/*************  REVISION HISTORY  *********************



date: 2002/06/07 01:03:31;  
author: graham;    
added separate client and server menu system classes



date: 2002/06/06 10:23:20;  
author: graham;    
Menusystem handles the args to console client.



date: 2002/06/05 01:12:17;  
author: graham;    
Copied menusystem files into final directory



date: 2002/06/04 21:37:57;  
author: nowell;  
Added directory for our final build





date: 2002/06/04 03:40:37;  
author: graham;    
Menusystem draws but doesn't respond to keypresses..



date: 2002/06/04 03:04:29;  
author: graham;    
MenuSystem compiles. I don't know if it works yet, but it compiles.



date: 2002/06/04 02:21:09;  
author: graham;    
Trying to get the menusystem test program working.



date: 2002/06/03 00:04:53;  
author: graham;    
Added math functions to menusystem files.



date: 2002/06/02 23:41:38;  
author: graham;    
Added "using namespace std" to everything



date: 2002/03/21 02:23:01;  
author: graham;    




date: 2002/02/19 07:36:31;  
author: graham;    

More menusystem code; some event-handling code in MenuPane and MenuSystem.



date: 2002/02/18 21:36:07;  
author: graham;    

Added the pointers to the various menupanes.



date: 2002/02/18 21:25:46;  
author: graham;    

I left out a #include in the last commit..



date: 2002/02/18 21:22:22;  
author: graham;  

These are updated header files for the menusystem, as generated by the online documentation.


***********  END REVISION HISTORY **********/


using namespace std;


#ifndef _MENUSYSTEM_H_
#define _MENUSYSTEM_H_

#include <math.h>
#include <string>
#include "Event.h"
#include "enums.h"
#include "MenuPane.h"
#include "MenuWidget.h"
// The includes for the superclasses are automatically listed.
// You need to specify any others


// Description:
//
// This object manages the initial menus. 

class MenuSystem {
		// Data Members

	private:

		// A pointer to the current menu. 
		MenuPane * currentMenu;



	public:
		// The first menu, from which users can select singleplayer, 
		// creategame, or joingame. 
		MenuPane * mainMenu;


		// Methods

	private:


	public:
		// in subclasses, performs any necessary updating 
		virtual void updateMenuDisplay ( void ) {};

		
		// Passes events to the current menupane. 
		void receiveEvent( InputEvent * e );

		// packages the keypress as an input event and sends it to the menus.
		// these prototypes are the same as the GLUT prototypes for special 
		// regular keypresses.
		void specialKey (int, int, int);
		void regularKey (char, int, int);

		// draws the current menu pane
		void draw ( void );

		
		// returns true if the user has finished interacting with
		// the menu system.
		bool terminated ( void );


		// Constructor(s)

		// Sets up the menusystem 
		MenuSystem ( void );



		// Destructor

		~MenuSystem ( void );

};

#endif
